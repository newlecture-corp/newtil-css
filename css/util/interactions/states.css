/* ===== STATES & PSEUDO-CLASSES UTILITIES ===== */
/* CSS 속성명과 값을 그대로 유지하는 NewTil CSS 철학 */
/* 상태별 스타일링: hover, focus, active, disabled 등 */

/* ===== HOVER STATES ===== */

/* hover: 모든 유틸리티 클래스는 hover: 접두사로 사용 가능 */
/* 예시: hover:background-color:main-1, hover:bg:main-1 */

/* 일반적인 hover 효과들 */
.hover\:opacity\:75:hover {
	opacity: var(--opacity-75) !important;
}

.hover\:opacity\:50:hover {
	opacity: var(--opacity-50) !important;
}

.hover\:opacity\:100:hover {
	opacity: var(--opacity-100) !important;
}

/* transform hover 효과 */
.hover\:transform\:scale\(1\.05\):hover,
.hover\:scale\:105:hover {
	transform: scale(1.05) !important;
}

.hover\:transform\:scale\(1\.1\):hover,
.hover\:scale\:110:hover {
	transform: scale(1.1) !important;
}

.hover\:transform\:scale\(0\.95\):hover,
.hover\:scale\:95:hover {
	transform: scale(0.95) !important;
}

.hover\:transform\:translateY\(-2px\):hover,
.hover\:translate-y\:-2:hover {
	transform: translateY(-2px) !important;
}

.hover\:transform\:translateY\(-4px\):hover,
.hover\:translate-y\:-4:hover {
	transform: translateY(-4px) !important;
}

/* shadow hover 효과 */
.hover\:box-shadow\:md:hover,
.hover\:shadow\:md:hover {
	box-shadow: var(--shadow-md) !important;
}

.hover\:box-shadow\:lg:hover,
.hover\:shadow\:lg:hover {
	box-shadow: var(--shadow-lg) !important;
}

.hover\:box-shadow\:xl:hover,
.hover\:shadow\:xl:hover {
	box-shadow: var(--shadow-xl) !important;
}

.hover\:box-shadow\:none:hover,
.hover\:shadow\:none:hover {
	box-shadow: var(--shadow-none) !important;
}

/* ===== FOCUS STATES ===== */

/* focus visible (접근성 친화적) */
.focus\:outline\:2px:focus-visible,
.focus\:outline\:2:focus-visible {
	outline: 2px solid var(--color-main-1) !important;
	outline-offset: 2px !important;
}

.focus\:outline\:none:focus,
.focus\:no-outline:focus {
	outline: none !important;
}

.focus\:ring\:2:focus-visible,
.focus\:ring\:2:focus {
	box-shadow: 0 0 0 2px var(--color-main-1) !important;
}

.focus\:ring\:4:focus-visible,
.focus\:ring\:4:focus {
	box-shadow: 0 0 0 4px var(--color-main-1) !important;
}

/* focus 시 색상 변경 */
.focus\:background-color\:main-1:focus,
.focus\:bg\:main-1:focus {
	background-color: var(--color-main-1) !important;
}

.focus\:background-color\:base-2:focus,
.focus\:bg\:base-2:focus {
	background-color: var(--color-base-2) !important;
}

.focus\:color\:white:focus,
.focus\:tc\:white:focus {
	color: var(--color-white) !important;
}

/* ===== ACTIVE STATES ===== */

.active\:transform\:scale\(0\.95\):active,
.active\:scale\:95:active {
	transform: scale(0.95) !important;
}

.active\:transform\:scale\(0\.98\):active,
.active\:scale\:98:active {
	transform: scale(0.98) !important;
}

.active\:opacity\:75:active {
	opacity: var(--opacity-75) !important;
}

.active\:opacity\:50:active {
	opacity: var(--opacity-50) !important;
}

/* ===== DISABLED STATES ===== */

.disabled\:opacity\:50:disabled,
.disabled\:opacity\:50[disabled] {
	opacity: var(--opacity-50) !important;
}

.disabled\:cursor\:not-allowed:disabled,
.disabled\:cursor\:not-allowed[disabled] {
	cursor: not-allowed !important;
}

.disabled\:background-color\:base-3:disabled,
.disabled\:bg\:base-3:disabled,
.disabled\:background-color\:base-3[disabled],
.disabled\:bg\:base-3[disabled] {
	background-color: var(--color-base-3) !important;
}

.disabled\:color\:base-5:disabled,
.disabled\:tc\:base-5:disabled,
.disabled\:color\:base-5[disabled],
.disabled\:tc\:base-5[disabled] {
	color: var(--color-base-5) !important;
}

.disabled\:pointer-events\:none:disabled,
.disabled\:pointer\:none:disabled,
.disabled\:pointer-events\:none[disabled],
.disabled\:pointer\:none[disabled] {
	pointer-events: none !important;
}

/* ===== CHECKED STATES ===== */

.checked\:background-color\:main-1:checked,
.checked\:bg\:main-1:checked {
	background-color: var(--color-main-1) !important;
}

.checked\:color\:white:checked,
.checked\:tc\:white:checked {
	color: var(--color-white) !important;
}

.checked\:border-color\:main-1:checked,
.checked\:bd-c\:main-1:checked {
	border-color: var(--color-main-1) !important;
}

/* ===== FIRST/LAST CHILD ===== */

.first\:margin-top\:0:first-child,
.first\:mt\:0:first-child {
	margin-top: var(--spacing-0) !important;
}

.last\:margin-bottom\:0:last-child,
.last\:mb\:0:last-child {
	margin-bottom: var(--spacing-0) !important;
}

.first\:border-top-left-radius\:md:first-child,
.first\:rounded-tl\:md:first-child {
	border-top-left-radius: var(--radius-md) !important;
}

.first\:border-top-right-radius\:md:first-child,
.first\:rounded-tr\:md:first-child {
	border-top-right-radius: var(--radius-md) !important;
}

.last\:border-bottom-left-radius\:md:last-child,
.last\:rounded-bl\:md:last-child {
	border-bottom-left-radius: var(--radius-md) !important;
}

.last\:border-bottom-right-radius\:md:last-child,
.last\:rounded-br\:md:last-child {
	border-bottom-right-radius: var(--radius-md) !important;
}

/* ===== NTH-CHILD ===== */

.odd\:background-color\:base-1:nth-child(odd),
.odd\:bg\:base-1:nth-child(odd) {
	background-color: var(--color-base-1) !important;
}

.even\:background-color\:base-2:nth-child(even),
.even\:bg\:base-2:nth-child(even) {
	background-color: var(--color-base-2) !important;
}

.odd\:background-color\:white:nth-child(odd),
.odd\:bg\:white:nth-child(odd) {
	background-color: var(--color-white) !important;
}

.even\:background-color\:base-1:nth-child(even),
.even\:bg\:base-1:nth-child(even) {
	background-color: var(--color-base-1) !important;
}

/* ===== GROUP STATES (부모 hover시 자식 변경) ===== */

.group:hover .group-hover\:opacity\:75,
.group:hover .gh\:opacity\:75 {
	opacity: var(--opacity-75) !important;
}

.group:hover .group-hover\:opacity\:100,
.group:hover .gh\:opacity\:100 {
	opacity: var(--opacity-100) !important;
}

.group:hover .group-hover\:transform\:scale\(1\.05\),
.group:hover .gh\:scale\:105 {
	transform: scale(1.05) !important;
}

.group:hover .group-hover\:transform\:translateX\(4px\),
.group:hover .gh\:translate-x\:4 {
	transform: translateX(4px) !important;
}

.group:hover .group-hover\:color\:main-1,
.group:hover .gh\:tc\:main-1 {
	color: var(--color-main-1) !important;
}

.group:hover .group-hover\:background-color\:main-1,
.group:hover .gh\:bg\:main-1 {
	background-color: var(--color-main-1) !important;
}

/* ===== PEER STATES (형제 요소 상태에 따른 변경) ===== */

.peer:hover ~ .peer-hover\:opacity\:75,
.peer:hover ~ .ph\:opacity\:75 {
	opacity: var(--opacity-75) !important;
}

.peer:focus ~ .peer-focus\:opacity\:100,
.peer:focus ~ .pf\:opacity\:100 {
	opacity: var(--opacity-100) !important;
}

.peer:checked ~ .peer-checked\:background-color\:main-1,
.peer:checked ~ .pc\:bg\:main-1 {
	background-color: var(--color-main-1) !important;
}

.peer:checked ~ .peer-checked\:color\:white,
.peer:checked ~ .pc\:tc\:white {
	color: var(--color-white) !important;
}

/* ===== RESPONSIVE STATES ===== */

/* Small screens (640px+) */
@media (min-width: 640px) {
	.sm\:hover\:scale\:105:hover {
		transform: scale(1.05) !important;
	}
	.sm\:hover\:shadow\:lg:hover {
		box-shadow: var(--shadow-lg) !important;
	}
	.sm\:focus\:ring\:2:focus {
		box-shadow: 0 0 0 2px var(--color-main-1) !important;
	}
}

/* Medium screens (768px+) */
@media (min-width: 768px) {
	.md\:hover\:scale\:105:hover {
		transform: scale(1.05) !important;
	}
	.md\:hover\:shadow\:lg:hover {
		box-shadow: var(--shadow-lg) !important;
	}
	.md\:focus\:ring\:2:focus {
		box-shadow: 0 0 0 2px var(--color-main-1) !important;
	}
}

/* Large screens (1024px+) */
@media (min-width: 1024px) {
	.lg\:hover\:scale\:105:hover {
		transform: scale(1.05) !important;
	}
	.lg\:hover\:shadow\:lg:hover {
		box-shadow: var(--shadow-lg) !important;
	}
	.lg\:focus\:ring\:2:focus {
		box-shadow: 0 0 0 2px var(--color-main-1) !important;
	}
}

/* Extra large screens (1280px+) */
@media (min-width: 1280px) {
	.xl\:hover\:scale\:105:hover {
		transform: scale(1.05) !important;
	}
	.xl\:hover\:shadow\:lg:hover {
		box-shadow: var(--shadow-lg) !important;
	}
	.xl\:focus\:ring\:2:focus {
		box-shadow: 0 0 0 2px var(--color-main-1) !important;
	}
}

/* ===== PRINT STATES ===== */
@media print {
	.print\:hidden {
		display: none !important;
	}
	.print\:block {
		display: block !important;
	}
	.print\:inline {
		display: inline !important;
	}
}

/* ===== MOTION PREFERENCES ===== */
@media (prefers-reduced-motion: reduce) {
	.motion-reduce\:transform\:none {
		transform: none !important;
	}

	.motion-reduce\:transition\:none {
		transition: none !important;
	}
}

@media (prefers-reduced-motion: no-preference) {
	.motion-safe\:transition\:all {
		transition: all 150ms ease !important;
	}
}

/* ===== DARK MODE STATES ===== */
@media (prefers-color-scheme: dark) {
	.dark\:background-color\:base-9,
	.dark\:bg\:base-9 {
		background-color: var(--color-base-9) !important;
	}

	.dark\:color\:base-1,
	.dark\:tc\:base-1 {
		color: var(--color-base-1) !important;
	}

	.dark\:border-color\:base-7,
	.dark\:bd-c\:base-7 {
		border-color: var(--color-base-7) !important;
	}
}

/* 수동 dark mode 클래스 */
.dark .dark\:background-color\:base-9,
.dark .dark\:bg\:base-9 {
	background-color: var(--color-base-9) !important;
}

.dark .dark\:color\:base-1,
.dark .dark\:tc\:base-1 {
	color: var(--color-base-1) !important;
}

.dark .dark\:border-color\:base-7,
.dark .dark\:bd-c\:base-7 {
	border-color: var(--color-base-7) !important;
}
